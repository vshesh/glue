var Markdown = {
    view: function() {
      return m('div', m('h1', 'Markdown Introduction'), m('p', 'Paragraphs are separated by a blank line.'), m('p', '2nd paragraph. ', m('em', {}, 'Italic'), ', ', m('strong', {}, 'bold'), ', and ', m('code', {}, 'monospace'), '. Itemized lists\nlook like:'), m('ul', m('li', 'this one', m('ul', m('li', 'that one'), m('li', 'the other one'))), m('li', 'yet another one')), m('p', '\nNote that lists are one example of an ', m('span', {'style': 'text-decoration:underline;'}, 'environment'), ', and you will see many more of those coming up! The environment is begun with ', m('code', {}, '---list'), ' and ended with ', m('code', {}, '...'), ' on the last line.'), m('div.blockquote', m('p', 'Block quotes are\nwritten like so.'), m('p', 'They can span multiple paragraphs,\nif you like.')), m('h2', 'An h2 header'), m('p', "Here's a numbered list:"), m('ol', m('li', 'first item', m('ol', m('li', 'first item'), m('li', 'second item'))), m('li', 'second item'), m('li', 'third item')), m('p', "\nIt's the same environment, but with an option attached (", m('code', {}, '-o'), '). Options look like the UNIX command-line, which can be a little unintuitive, but it forms a complete representation of the object.'), m('p', 'Here is a different kind of environment - a code block:'), m('pre', m('code#cd72267c-f9fd-4a77-afa2-ad3a90ef9d90.language-bash', 'echo "Hello World!"\n'), m('script', {'key': 'cd72267c-f9fd-4a77-afa2-ad3a90ef9d90'}, "hljs.highlightBlock(document.getElementById('cd72267c-f9fd-4a77-afa2-ad3a90ef9d90'))")), m('p', '\nIt\'s the same syntax for starting an environment, but this one is named "code" instead of "list". Again we passed an extra piece of information, this time the name of the programming language.'), m('p', "Here's another, with python as the language instead of bash:"), m('pre', m('code#16962af8-5d32-48b1-ae25-52e19be4c05d.language-python', 'import time\n# Quick, count to ten!\nfor i in range(10):\n    # (but not *too* quick)\n    time.sleep(0.5)\n    print i\n'), m('script', {'key': '16962af8-5d32-48b1-ae25-52e19be4c05d'}, "hljs.highlightBlock(document.getElementById('16962af8-5d32-48b1-ae25-52e19be4c05d'))")), m('h3', 'An h3 header'), m('p', 'Now a nested list:'), m('ol', m('li', 'First, get these ingredients:', m('ol', m('li', 'carrots'), m('li', 'celery'), m('li', 'lentils'))), m('li', 'Boil some water'), m('li', 'Dump everything in the pot and follow this algorithm:', m('ol', m('li', 'find wooden spoon'), m('li', 'uncover pot'), m('li', 'stir'), m('li', 'cover pot'), m('li', 'balance wooden spoon precariously on pot handle'), m('li', 'wait 10 minutes'), m('li', 'goto first step (or shut off burner when done)'))), m('li', 'Do not bump wooden spoon or it will fall.')), m('p', "Here's a link to ", m('a', {'href': 'https://google.com'}, 'google'), '.'), m('p', 'Tables can look like this:'), m('table', m('tr', {'style': {}}, m('td', {}, 'size'), m('td', {}, 'material'), m('td', {}, '     color')), m('tr', {'style': {}}, m('td', {}, '9'), m('td', {}, ' leather '), m('td', {}, '    brown')), m('tr', {'style': {}}, m('td', {}, '10 '), m('td', {}, 'hemp canvas'), m('td', {}, '  natural')), m('tr', {'style': {}}, m('td', {}, '11 '), m('td', {}, ' glass    '), m('td', {}, '   transparent')), m('tr', {'style': {}}, m('td', {}))), m('p', "\nHere's a definition list:"), m('p', 'apples\n  : Good for making applesauce.\noranges\n  : Citrus!\ntomatoes\n  : There\'s no "e" in tomato.'), m('p', 'Again, text is indented 4 spaces. (Put a blank line between each\nterm/definition pair to spread things out more.)'), m('p', 'Here\'s a "line block":'), m('p', '| Line one\n|   Line too\n| Line tree'), m('p', 'and images can be specified like so:'), m('p', m('img', {'alt': 'example image', 'style': {'display': 'block', 'margin': '0 auto', 'max-width': '100%'}, 'src': 'http://www.w3schools.com/css/img_fjords.jpg'})), m('p', 'Inline math equations go in like so: $\\omega = d\\phi / dt$. Display\nmath should get its own line and be put in the katex environment:'), m('div.katex', m('div#katex-79f0fa59-d877-4a11-96be-a1fb66a8ee30'), m('script', {'key': 'katex-79f0fa59-d877-4a11-96be-a1fb66a8ee30'}, "katex.render('\\\\displaystyle{I = \\\\int \\\\rho R^2dV}', document.getElementById('katex-79f0fa59-d877-4a11-96be-a1fb66a8ee30'))")), m('p', '\nAnd note that you can backslash-escape any punctuation characters\nwhich you wish to be displayed literally, ex.: `foo`, *bar*, etc.'));
    }
  };
  
